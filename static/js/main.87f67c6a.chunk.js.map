{"version":3,"sources":["components/Tweet.jsx","components/Loader.jsx","components/RQG.jsx","App.js","index.js"],"names":["Tweet","props","onClick","window","open","quotes","author","className","Loader","API","tempArray","RQG","useState","setQuotes","setAuthor","quoteGen","a","fetch","response","json","data","randomNumber","Math","floor","random","length","quote","useEffect","setInterval","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAgBeA,EAZD,SAACC,GAKX,OACI,8BACI,yBAAQC,QANhB,WACIC,OAAOC,KAAP,gDAAqDH,EAAMI,OAA3D,YAAqEJ,EAAMK,UAKvE,mBAAoC,mBAAGC,UAAU,yBCL9CC,EANA,SAACP,GACZ,OACI,qBAAKM,UAAU,YCEnBE,EAAM,yIAKNC,EAAY,GA+CDC,EA7CH,WAAM,MAEaC,mBAAS,IAFtB,mBAEPP,EAFO,KAEAQ,EAFA,OAGaD,mBAAS,IAHtB,mBAGPN,EAHO,KAGAQ,EAHA,cAKCC,IALD,2EAKd,gCAAAC,EAAA,sEAC2BC,MAAMR,GADjC,cACUS,EADV,gBAEuBA,EAASC,OAFhC,OAEUC,EAFV,OAKQC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKf,OAAOoB,QAM1DZ,GAHAH,EAAYU,GAGQf,OAAOgB,GAAcK,OACzCZ,EAAUJ,EAAUL,OAAOgB,GAAcf,QAZ7C,6CALc,sBA2Bd,OALAqB,qBAAU,WACNC,YAAYb,EAAU,KACtBA,MACF,IAGE,kCAEI,sBAAKc,GAAG,kBAAR,UACI,sBAAKtB,UAAU,SAAf,UAECF,EAAOoB,QAAU,EAAI,cAAC,EAAD,IAAa,GAEnC,mBAAGlB,UAAWF,EAAOoB,OAAS,IAAM,QAAU,GAA9C,SAAmDpB,IAJnD,KAKI,mBAAGE,UAAU,SAAb,SAAuBD,IAL3B,OAQA,cAAC,EAAD,CAAOD,OAAQA,EAAQC,OAAQA,UCrChCwB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87f67c6a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nconst Tweet = (props) => {\r\n    function handleTweet(){\r\n        window.open(`https://twitter.com/intent/tweet?text=${props.quotes}-${props.author}`);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={handleTweet}>Tweet <i className=\"fab fa-twitter\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;","const Loader = (props) => {\r\n    return(\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { useState,useEffect } from \"react\";\r\nimport Tweet from \"./Tweet\";\r\nimport Loader from \"./Loader\";\r\n\r\nlet API = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\r\n\r\n\r\n\r\n// CREATING AN EMPTY ARRAY TO HOLD THE DATA FROM THE API\r\nlet tempArray = [];\r\n\r\nconst RQG = () => {\r\n    // DEFINING THE STATES\r\n    const [quotes,setQuotes] = useState(\"\");\r\n    const [author,setAuthor] = useState(\"\");\r\n\r\n    async function quoteGen(){\r\n        const response = await fetch(API);\r\n        const data = await response.json();\r\n\r\n        // console.log(data);\r\n        let randomNumber = Math.floor(Math.random() * data.quotes.length)\r\n\r\n        // SETTING THE DATA GOTTEN FROM THE API TO OUR ARRAY,THIS MAKES IT EASIER TO FETCH THEM WITHOTU SKIPPING. FOUND OUT THIS IS NOT NECESSARY AND IT WAS JUST TEH BEHAVIOUR OF OUR LOCAL ENVIRONMENT\r\n        tempArray = data;\r\n        \r\n        // console.log(tempArray);\r\n        setQuotes(tempArray.quotes[randomNumber].quote);\r\n        setAuthor(tempArray.quotes[randomNumber].author);\r\n        \r\n    }\r\n\r\n    // USEEFFECT HOOK TO RENDER OUR FUNCTION ONCE\r\n    useEffect(() => {  \r\n        setInterval(quoteGen, 10000);\r\n        quoteGen();\r\n    },[]) \r\n\r\n    return(\r\n        <section>\r\n            {/* THE QUOTE CONTAINER */}\r\n            <div id=\"quote-container\">                \r\n                <div className=\"quotes\">\r\n                    {/* THIS DISPLAYS THE LOADER COMPONENT IF THERE IS NO TEXT OR QUOTE DISPLAYING */}\r\n                {quotes.length <= 0 ? <Loader /> : \"\"}\r\n                {/* SETTING CLASSNAME TO A SMALL CLASS WITH SMALL FONT SIZE IF THE QUOTE IS LONGER */}\r\n                <p className={quotes.length > 200 ? \"small\" : \"\"}>{quotes}</p>  {/* DISPLAYS QUOTES */}\r\n                    <p className=\"author\">{author}</p> {/* DISPLAYS AUTHOR */}                \r\n                </div>\r\n                {/* THE TWEET BUTTON */}\r\n                <Tweet quotes={quotes} author={author} />\r\n            </div>\r\n\r\n        </section>)\r\n}\r\n\r\nexport default RQG;","import React from \"react\";\nimport './App.css';\n\nimport RQG from \"./components/RQG\";\n\nfunction App() {\n  return(\n    <div>\n      <RQG />\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}